.model DATAPATH

.inputs  PH_INIZIALE7 PH_INIZIALE6 PH_INIZIALE5 PH_INIZIALE4 \
         PH_INIZIALE3 PH_INIZIALE2 PH_INIZIALE1 PH_INIZIALE0 \
         RESET INIZIO_OPERAZIONE FINE_OPERAZIONE TIPO_PH
.outputs PH_FINALE7 PH_FINALE6 PH_FINALE5 PH_FINALE4 \
         PH_FINALE3 PH_FINALE2 PH_FINALE1 PH_FINALE0 \
         NCLK7 NCLK6 NCLK5 NCLK4 NCLK3 NCLK2 NCLK1 NCLK0 \
         NEUTRO

.subckt ZERO RES=0

# Memorizza il tipo del pH per evitare di creare cicli con la FSM.
.subckt REG1 A=TIPO_PH MEM=REG_TIPO_PH

# Azzera il contatore quando riceve il segnale
# RESET oppure quello INIZIO_OPERAZIONE.
.subckt OR A=RESET B=INIZIO_OPERAZIONE RES=RESETCOUNTER

# Tiene il conto di tutte le operazioni svolte.
.subckt COUNTER RESET=RESETCOUNTER STOP=STOP_OPERAZIONE \
                RES7=NCLK7 RES6=NCLK6 RES5=NCLK5 RES4=NCLK4 \
                RES3=NCLK3 RES2=NCLK2 RES1=NCLK1 RES0=NCLK0

# Quando il segnale di FINE_OPERAZIONE equivale ad 1
# restituisce il valore del pH in ingresso, altrimenti
# il risultato del multiplexer di STOP.
.subckt MUX8 SEL=INIZIO_OPERAZIONE \
             A7=VAL7 A6=VAL6 A5=VAL5 A4=VAL4 A3=VAL3 A2=VAL2 A1=VAL1 A0=VAL0 \
             B7=PH_INIZIALE7 B6=PH_INIZIALE6 B5=PH_INIZIALE5 B4=PH_INIZIALE4 \
             B3=PH_INIZIALE3 B2=PH_INIZIALE2 B1=PH_INIZIALE1 B0=PH_INIZIALE0 \
             OUT7=INI7 OUT6=INI6 OUT5=INI5 OUT4=INI4 OUT3=INI3 OUT2=INI2 OUT1=INI1 OUT0=INI0

# Quando il segnale di RESET equivale ad 1 restituisce
# un byte di valore 0, altrimenti il risultato del
# multiplexer di INIZIO_OPERAZIONE.
.subckt MUX8 SEL=RESET \
             A7=INI7   A6=INI6   A5=INI5   A4=INI4   A3=INI3   A2=INI2   A1=INI1   A0=INI0 \
             B7=0      B6=0      B5=0      B4=0      B3=0      B2=0      B1=0      B0=0    \
             OUT7=RST7 OUT6=RST6 OUT5=RST5 OUT4=RST4 OUT3=RST3 OUT2=RST2 OUT1=RST1 OUT0=RST0

# Quando il segnale di STOP_OPERAZIONE equivale a 0
# restituisce un byte di valore 0, altrimenti  il
# valore del multiplexer di RESET.
.subckt MUX8 SEL=STOP_OPERAZIONE \
             A7=0    A6=0    A5=0    A4=0    A3=0    A2=0    A1=0    A0=0    \
             B7=RST7 B6=RST6 B5=RST5 B4=RST4 B3=RST3 B2=RST2 B1=RST1 B0=RST0 \
             OUT7=PH_FINALE7 OUT6=PH_FINALE6 OUT5=PH_FINALE5 OUT4=PH_FINALE4 \
             OUT3=PH_FINALE3 OUT2=PH_FINALE2 OUT1=PH_FINALE1 OUT0=PH_FINALE0

# Memorizza il risultato del multiplexer di RESET.
.subckt REG8 A7=RST7   A6=RST6   A5=RST5   A4=RST4   A3=RST3   A2=RST2   A1=RST1   A0=RST0 \
             MEM7=REG7 MEM6=REG6 MEM5=REG5 MEM4=REG4 MEM3=REG3 MEM2=REG2 MEM1=REG1 MEM0=REG0

# Modifica il pH in base al valore del segnale di TIPO_PH.
.subckt MODIFIER SEL=REG_TIPO_PH \
                 VAL7=REG7 VAL6=REG6 VAL5=REG5 VAL4=REG4 VAL3=REG3 VAL2=REG2 VAL1=REG1 VAL0=REG0 \
                 RES7=MDF7 RES6=MDF6 RES5=MDF5 RES4=MDF4 RES3=MDF3 RES2=MDF2 RES1=MDF1 RES0=MDF0

# Determina se la codifica del pH Ã¨ compresa nell'
# intervallo [7,00, 8,00].
.subckt NEUTRAL VAL7=REG7 VAL6=REG6 VAL5=REG5 VAL4=REG4 VAL3=REG3 VAL2=REG2 VAL1=REG1 VAL0=REG0 \
                RES=NEUTRO

# Quando il segnale di STOP_OPERAZIONE equivale a 0
# restituisce il risultato del modificatore, altrimenti
# il valore memorizzato nel registro.
.subckt MUX8 SEL=STOP_OPERAZIONE \
              A7=MDF7   A6=MDF6   A5=MDF5   A4=MDF4   A3=MDF3   A2=MDF2   A1=MDF1   A0=MDF0 \
              B7=REG7   B6=REG6   B5=REG5   B4=REG4   B3=REG3   B2=REG2   B1=REG1   B0=REG0 \
              OUT7=VAL7 OUT6=VAL6 OUT5=VAL5 OUT4=VAL4 OUT3=VAL3 OUT2=VAL2 OUT1=VAL1 OUT0=VAL0

.end

.search or.blif
.search zero.blif
.search mux8.blif
.search reg1.blif
.search reg8.blif
.search neutral.blif
.search modifier.blif
.search counter.blif
