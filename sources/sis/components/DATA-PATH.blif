# Calcolatore del circuito, dioè il data path.
# Dato il pH di una soluzione lo porta a neutralità,
# precisamente nell'intervallo [7, 8].
# Assume che il pH sia un byte codificato in virgola
# fissa con 4 bit dedicati alla parte intera.
.model DATAPATH

# Accetta cinque input: un byte rappresentante il pH
# e quattro bit di stato che determinano se è nello
# stato di reset, l'inizio del calcolo, il tipo del
# pH oppure se il pH è neutro.
# Risponde con un byte rappresentante il pH dopo il
# termine delle operazioni, ed invia due segnali di
# controllo che determinano se il pH non è accettabile
# oppure se è neutro.
.inputs  PH7 PH6 PH5 PH4 PH3 PH2 PH1 PH0 RESET INIZIO_OPERAZIONE TIPO_PH STOP_OPERAZIONE
.outputs PH_FINALE7 PH_FINALE6 PH_FINALE5 PH_FINALE4 PH_FINALE3 PH_FINALE2 PH_FINALE1 PH_FINALE0 NCLK7 NCLK6 NCLK5 NCLK4 NCLK3 NCLK2 NCLK1 NCLK0 ERRORE CONTROLLO_NEUTRO

# Valori costanti.
.subckt ZERO RES=0
# .subckt ONE  RES=1

# Memorizza il tipo precedente per evitare
# di creare cicli con la FSM.
.subckt REG1 A=TIPO_PH MEM=TIPO_PH_MEM

# Questo multiplexer riceve il segnale di stato INIZIO_OPERAZIONE
# dalla FSM; quando il segnale equivale ad UNO sceglie
# il byte inserito, altrimenti sceglie quello selezionato dal
# multiplexer di neutralità.
.subckt MUX8 SEL=INIZIO_OPERAZIONE A7=VALUE7 A6=VALUE6 A5=VALUE5 A4=VALUE4 A3=VALUE3 A2=VALUE2 A1=VALUE1 A0=VALUE0 B7=PH7 B6=PH6 B5=PH5 B4=PH4 B3=PH3 B2=PH2 B1=PH1 B0=PH0 OUT7=INPUT7 OUT6=INPUT6 OUT5=INPUT5 OUT4=INPUT4 OUT3=INPUT3 OUT2=INPUT2 OUT1=INPUT1 OUT0=INPUT0

# Quando sopraggiunge il segnale di reset, questo
# multiplexer propaga un byte di valore ZERO,
# altrimenti propaga il byte selezionato dal multiplexer
# di start.
.subckt MUX8 SEL=RESET A7=INPUT7 A6=INPUT6 A5=INPUT5 A4=INPUT4 A3=INPUT3 A2=INPUT2 A1=INPUT1 A0=INPUT0 B7=0 B6=0 B5=0 B4=0 B3=0 B2=0 B1=0 B0=0 OUT7=PH_FINALE7 OUT6=PH_FINALE6 OUT5=PH_FINALE5 OUT4=PH_FINALE4 OUT3=PH_FINALE3 OUT2=PH_FINALE2 OUT1=PH_FINALE1 OUT0=PH_FINALE0

# Determina se la codifica del pH è valida.
.subckt ERROR VAL7=PH_FINALE7 VAL6=PH_FINALE6 VAL5=PH_FINALE5 VAL4=PH_FINALE4 VAL3=PH_FINALE3 VAL2=PH_FINALE2 VAL1=PH_FINALE1 VAL0=PH_FINALE0 RES=ERRORE

# Memorizza il valore del pH selezionato dal
# multiplexer di reset.
.subckt REG8 A7=PH_FINALE7 A6=PH_FINALE6 A5=PH_FINALE5 A4=PH_FINALE4 A3=PH_FINALE3 A2=PH_FINALE2 A1=PH_FINALE1 A0=PH_FINALE0 MEM7=STORE7 MEM6=STORE6 MEM5=STORE5 MEM4=STORE4 MEM3=STORE3 MEM2=STORE2 MEM1=STORE1 MEM0=STORE0

# Modifica il pH della soluzione in base al tipo che
# possiede, in altre parole se il tipo equivale a ZERO
# significa che è acida e quindi aggiunge 0.5, in caso
# contrario, se equivale a UNO, significa che è basica
# e quindi sottrae 0.25.
# Infine indirizza il risultato al multiplexer che
# verifica se il circuito si trova nello stato di
# neutralità.
.subckt MODIFIER SEL=TIPO_PH_MEM VAL7=STORE7 VAL6=STORE6 VAL5=STORE5 VAL4=STORE4 VAL3=STORE3 VAL2=STORE2 VAL1=STORE1 VAL0=STORE0 RES7=MODIF7 RES6=MODIF6 RES5=MODIF5 RES4=MODIF4 RES3=MODIF3 RES2=MODIF2 RES1=MODIF1 RES0=MODIF0

# Questo multiplexer riceve il segnale di stato STOP
# dalla FSM; quando il segnale equivale ad UNO sceglie
# il byte memorizzato nel registro, altrimenti sceglie
# quello modificato.
.subckt MUX8 SEL=STOP_OPERAZIONE A7=MODIF7 A6=MODIF6 A5=MODIF5 A4=MODIF4 A3=MODIF3 A2=MODIF2 A1=MODIF1 A0=MODIF0 B7=STORE7 B6=STORE6 B5=STORE5 B4=STORE4 B3=STORE3 B2=STORE2 B1=STORE1 B0=STORE0 OUT7=VALUE7 OUT6=VALUE6 OUT5=VALUE5 OUT4=VALUE4 OUT3=VALUE3 OUT2=VALUE2 OUT1=VALUE1 OUT0=VALUE0

# Verifica se il pH ha raggiunto una codifica neutra.
.subckt NEUTRAL VAL7=STORE7 VAL6=STORE6 VAL5=STORE5 VAL4=STORE4 VAL3=STORE3 VAL2=STORE2 VAL1=STORE1 VAL0=STORE0 RES=CONTROLLO_NEUTRO

# Conta tutte le operazioni svolte per raggiungere la
# neutralità.
.subckt COUNTER RESET=RESET STOP=STOP_OPERAZIONE RES7=NCLK7 RES6=NCLK6 RES5=NCLK5 RES4=NCLK4 RES3=NCLK3 RES2=NCLK2 RES1=NCLK1 RES0=NCLK0

.end

# Ricerca dei modelli ZERO, ONE, MUX8, REG1, REG8, NEUTRAL, ERROR, MODIFIER, COUNTER.
.search zero.blif
.search one.blif
.search mux8.blif
.search reg1.blif
.search reg8.blif
.search neutral.blif
.search error.blif
.search modifier.blif
.search counter.blif
